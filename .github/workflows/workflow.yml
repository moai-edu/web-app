name: CI/CD Pipeline

on:
    push:
        branches:
            - main
            - develop

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            should_setup: ${{ steps.parse-commit.outputs.should_setup }}
            should_teardown: ${{ steps.parse-commit.outputs.should_teardown }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - id: parse-commit
              run: |
                  MESSAGE=$(git log -1 --pretty=%B)
                  echo "Commit message: $MESSAGE"
                  if [[ "$MESSAGE" == *"SETUP"* ]]; then
                      echo "should_setup=true" >> $GITHUB_OUTPUT
                  fi
                  if [[ "$MESSAGE" == *"TEARDOWN"* ]]; then
                      echo "should_teardown=true" >> $GITHUB_OUTPUT
                  fi

    setup:
        needs: [prepare]
        if: ${{ needs.prepare.outputs.should_setup == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            # 安装 pnpm
            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 10
                  run_install: false

            # 配置 Node.js 并启用 pnpm 缓存
            - name: Configure Node.js with pnpm cache
              uses: actions/setup-node@v4
              with:
                  node-version: '21'
                  cache: 'pnpm' # 现在 pnpm 已安装，可以启用缓存

            # 设置 Python 环境
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.12'
                  cache: 'pip'

            # 安装系统工具
            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y make

            # 安装Node.js项目依赖
            - name: Install Node.js dependencies
              run: pnpm install --frozen-lockfile

            # 安装 Python 依赖（如果有 requirements.txt）
            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then
                      pip install -r requirements.txt
                  fi

            # 部署到 AWS
            - name: Deploy to AWS (Development or Production)
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: 'us-east-1'
                  NEXT_AUTH_SECRET_DEV: ${{ secrets.NEXT_AUTH_SECRET_DEV }}
                  NEXT_AUTH_SECRET_PROD: ${{ secrets.NEXT_AUTH_SECRET_PROD }}
              run: |
                  if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
                    echo "Deploying to Production environment..."
                    source .env.prod.sh && make setup
                  fi
                  if [ "${GITHUB_REF}" == "refs/heads/develop" ]; then
                    echo "Deploying to Development environment..."
                    source .env.dev.sh && make setup
                  fi

            - name: Always check the content of sst-env.d.ts
              if: always()
              run: |
                  echo "Checking content of sst-env.d.ts:"
                  cat ./sst-env.d.ts

    teardown:
        needs: [prepare]
        if: ${{ needs.prepare.outputs.should_teardown == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            # 安装 pnpm
            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 10
                  run_install: false

            # 设置 Node.js 环境并启用 pnpm 缓存
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '21'
                  cache: 'pnpm' # 现在 pnpm 已安装，可以启用缓存

            # 设置 Python 环境
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.12'
                  cache: 'pip'

            # 安装系统工具
            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y make

            # 安装Node.js项目依赖
            - name: Install Node.js dependencies
              run: pnpm install --frozen-lockfile

            # 安装 Python 依赖（如果有 requirements.txt）
            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then
                      pip install -r requirements.txt
                  fi

            - name: Teardown from AWS (Development or Production)
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: 'us-east-1'
                  NEXT_AUTH_SECRET_DEV: ${{ secrets.NEXT_AUTH_SECRET_DEV }}
                  NEXT_AUTH_SECRET_PROD: ${{ secrets.NEXT_AUTH_SECRET_PROD }}
              run: |
                  if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
                    echo "Tearing down the Production environment..."
                    source .env.prod.sh && make teardown
                  fi
                  if [ "${GITHUB_REF}" == "refs/heads/develop" ]; then
                    echo "Tearing down the Development environment..."
                    source .env.dev.sh && make teardown
                  fi
