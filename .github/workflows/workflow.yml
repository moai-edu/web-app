name: CI/CD Pipeline

on:
    push:
        branches:
            - main
            - develop

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            should_setup: ${{ steps.parse-commit.outputs.should_setup }}
            should_teardown: ${{ steps.parse-commit.outputs.should_teardown }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - id: parse-commit
              run: |
                  MESSAGE=$(git log -1 --pretty=%B)
                  echo "Commit message: $MESSAGE"
                  if [[ "$MESSAGE" == *"SETUP"* ]]; then
                      echo "should_setup=true" >> $GITHUB_OUTPUT
                  fi
                  if [[ "$MESSAGE" == *"TEARDOWN"* ]]; then
                      echo "should_teardown=true" >> $GITHUB_OUTPUT
                  fi

    # Job for setting up the Development environment
    setup_development:
        needs: [prepare]
        # This job runs only if 'should_setup' is true and the branch is 'develop'
        if:
            ${{ needs.prepare.outputs.should_setup == 'true' && github.ref ==
            'refs/heads/develop' }}
        runs-on: ubuntu-latest
        environment: dev # Associate with the 'development' environment
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 10
                  run_install: false

            - name: Configure Node.js with pnpm cache
              uses: actions/setup-node@v4
              with:
                  node-version: '21'
                  cache: 'pnpm'

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y make

            - name: Install Node.js dependencies
              run: pnpm install --frozen-lockfile

            - name: Deploy to AWS (Development)
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  CUSTOM_PROVIDER_AWS_REGION:
                      ${{ vars.CUSTOM_PROVIDER_AWS_REGION }}
                  # NEXT_AUTH_SECRET is now retrieved from the 'development' environment secrets
                  NEXT_AUTH_SECRET: ${{ secrets.NEXT_AUTH_SECRET }}
              run: |
                  echo "Deploying to Development environment..."
                  STAGE=dev make setup

            - name: Always check the content of sst-env.d.ts
              if: always()
              run: |
                  echo "Checking content of sst-env.d.ts:"
                  cat ./sst-env.d.ts

    # Job for setting up the Production environment
    setup_production:
        needs: [prepare]
        # This job runs only if 'should_setup' is true and the branch is 'main'
        if:
            ${{ needs.prepare.outputs.should_setup == 'true' && github.ref ==
            'refs/heads/main' }}
        runs-on: ubuntu-latest
        environment: prod # Associate with the 'production' environment
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 10
                  run_install: false

            - name: Configure Node.js with pnpm cache
              uses: actions/setup-node@v4
              with:
                  node-version: '21'
                  cache: 'pnpm'

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y make

            - name: Install Node.js dependencies
              run: pnpm install --frozen-lockfile

            - name: Deploy to AWS (Production)
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  CUSTOM_PROVIDER_AWS_REGION:
                      ${{ vars.CUSTOM_PROVIDER_AWS_REGION }}
                  # NEXT_AUTH_SECRET is now retrieved from the 'production' environment secrets
                  NEXT_AUTH_SECRET: ${{ secrets.NEXT_AUTH_SECRET }}
              run: |
                  echo "Deploying to Production environment..."
                  STAGE=prod make setup

            - name: Always check the content of sst-env.d.ts
              if: always()
              run: |
                  echo "Checking content of sst-env.d.ts:"
                  cat ./sst-env.d.ts

    # Job for tearing down the Development environment
    teardown_development:
        needs: [prepare]
        # This job runs only if 'should_teardown' is true and the branch is 'develop'
        if:
            ${{ needs.prepare.outputs.should_teardown == 'true' && github.ref ==
            'refs/heads/develop' }}
        runs-on: ubuntu-latest
        environment: dev # Associate with the 'development' environment
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 10
                  run_install: false

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '21'
                  cache: 'pnpm'

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y make

            - name: Install Node.js dependencies
              run: pnpm install --frozen-lockfile

            - name: Teardown from AWS (Development)
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  CUSTOM_PROVIDER_AWS_REGION:
                      ${{ vars.CUSTOM_PROVIDER_AWS_REGION }}
                  # NEXT_AUTH_SECRET is now retrieved from the 'development' environment secrets
                  NEXT_AUTH_SECRET: ${{ secrets.NEXT_AUTH_SECRET }}
              run: |
                  echo "Tearing down the Development environment..."
                  source .env.dev.sh && STAGE=dev make teardown

    # Job for tearing down the Production environment
    teardown_production:
        needs: [prepare]
        # This job runs only if 'should_teardown' is true and the branch is 'main'
        if:
            ${{ needs.prepare.outputs.should_teardown == 'true' && github.ref ==
            'refs/heads/main' }}
        runs-on: ubuntu-latest
        environment: prod # Associate with the 'production' environment
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 10
                  run_install: false

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '21'
                  cache: 'pnpm'

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y make

            - name: Install Node.js dependencies
              run: pnpm install --frozen-lockfile

            - name: Teardown from AWS (Production)
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  CUSTOM_PROVIDER_AWS_REGION:
                      ${{ vars.CUSTOM_PROVIDER_AWS_REGION }}
                  # NEXT_AUTH_SECRET is now retrieved from the 'production' environment secrets
                  NEXT_AUTH_SECRET: ${{ secrets.NEXT_AUTH_SECRET }}
              run: |
                  echo "Tearing down the Production environment..."
                  source .env.prod.sh && STAGE=prod make teardown
