name: CI/CD Pipeline

on:
    push:
        branches:
            - main # 监听 main 分支的推送，进行生产环境部署
            - develop # 监听 develop 分支的推送，进行开发环境部署

jobs:
    build:
        runs-on: ubuntu-latest # 使用最新的 Ubuntu 环境来运行任务
        steps:
            - name: Checkout code
              uses: actions/checkout@v2 # 检出仓库代码
            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "21" # 使用 Node.js 版本 21，您可以根据项目需要修改版本
            - name: Install Make (if not already installed)
              run: |
                  sudo apt-get update
                  sudo apt-get install -y make  # 安装 GNU make
            - name: Install dependencies
              run: |
                  npm install  # 安装项目依赖
            - name: Deploy to AWS (Development or Production)
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # 从 GitHub Secrets 获取 AWS 访问密钥
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 从 GitHub Secrets 获取 AWS 秘密访问密钥
                  AWS_REGION: "us-east-1" # 设定 AWS 区域，您可以根据需要修改
                  NEXT_AUTH_SECRET: ${{ secrets.NEXT_AUTH_SECRET }} # 从 GitHub Secrets 获取 auth.js 密钥
              run: |
                  if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
                    echo "Deploying to Production environment..."
                    STAGE="prod" make deploy  # 生产环境部署
                  elif [ "${GITHUB_REF}" == "refs/heads/develop" ]; then
                    if [ -f "TEARDOWN" ]; then
                      echo "Tearing down the Development environment..."
                      STAGE="dev" make teardown  # 开发环境拆除
                    else
                      echo "Deploying to Development environment..."
                      STAGE="dev" make deploy  # 开发环境部署
                    fi
                  fi
            - name: Always check the content of sst-env.d.ts
              if: always() # 确保该步骤无论成功或失败都会执行
              run: |
                  echo "Checking content of sst-env.d.ts:"
                  cat ./sst-env.d.ts  # 输出 sst-env.d.ts 文件的内容
